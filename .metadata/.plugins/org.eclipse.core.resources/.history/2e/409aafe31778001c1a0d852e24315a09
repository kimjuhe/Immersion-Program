import java.util.Collections;
import java.net.*;
import java.io.*;
import java.util.*;

public class TcpIpMultichatServer {
	HashMap clients;
	
	TcpIpMultichatServer(){
		clients = new HashMap();
		Collections.synchronizedMap(clients);
	}
	
	public void start() {
		ServerSocket serverSocket = null;
		Socket socket= null;
		
		try {
			serverSocket=new ServerSocket(7777);
			System.out.println("서버가 시작되었습니다.");
			
			while(true) {
				serverSocket = new ServerSocket(7777);
				System.out.println("["+socket.getInetAddress()+":"+socket.getPort()+"] 에서 접속하였습니다.");
				ServerReceiver thread = new ServerReceiver(socket);
				thread.start();
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}//start
	
	void sendToAll(String msg) {
		Iterator it = clients.keySet().iterator();
		while(it.hasNext()) {
			try {
				DataOutputStream out = (DataOutputStream)clients.get(it.next());
				out.writeUTF(msg);
			}catch(IOException e) {}
		}//while
	} //sendToAll
	
	public static void main (String args[]) {
		new TcpIpMultichatServer().start();
	}
	
	class ServerReceiver extends Thread() {
		socket socket;
		DataInputStream in;
		DataOutputStream out;
		
		ServerReceiver(Socket socket){
			this.socket = socket;
			try {
				in=new DataInputStream(socket.getInputStream());
				out= new DataOutputStream(socket.getOutputStream());
			} catch(IOException e) {}
		}
	}
}
